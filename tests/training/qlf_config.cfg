[nlp]
lang = "eds"
pipeline = [
    "normalizer",
    "sentencizer",
    "embedding",
    "covid",
    "qualifier",
    ]
batch_size = 2
components = ${components}
tokenizer = {"@tokenizers": "eds.tokenizer"}

[components.normalizer]
@factory = "eds.normalizer"

[components.sentencizer]
@factory = "eds.sentences"

[components.covid]
@factory = "eds.covid"

[components.embedding]
@factory = "eds.text_cnn"
kernel_sizes = [3]

[components.embedding.embedding]
@factory = "eds.transformer"
model = "hf-internal-testing/tiny-bert"
window = 128
stride = 96
span_getter = { "@misc": "eds.span_context_getter", "span_getter": ${["ents", *vars.ml_span_groups]} }

[components.qualifier]
@factory = "eds.span_qualifier"
qualifiers = { "_.negation": [ "sosy" ] }

[components.qualifier.embedding]
@factory = "eds.span_pooler"
embedding = ${components.embedding}
span_getter = ${["ents", *vars.ml_span_groups]}

[scorer.qualifier.qualifier]
@scorers= "eds.span_classification_scorer"
span_getter = ${vars.ml_span_groups}
qualifiers = ${components.qualifier.qualifiers}

[vars]
train = "dataset/dataset.jsonl"
dev = "dataset/dataset.jsonl"
ml_span_groups = ["sosy"]

[train]
nlp = ${nlp}
max_steps = 20
validation_interval = ${train.max_steps//10}
warmup_rate = 0
batch_size = 4 spans
transformer_lr = 0
task_lr = 1e-3
scorer = ${scorer}

[train.train_data]
randomize = true
max_length = 10
multi_sentence = false
[train.train_data.reader]
@readers: "json"
path: ${vars.train}
converter: "custom"
span_setter: ${vars.ml_span_groups}
span_attributes: "negation"
bool_attributes: ["negation"]

[train.val_data]
[train.val_data.reader]
@readers: "json"
path: ${vars.dev}
converter: "custom"
span_setter: ${vars.ml_span_groups}
span_attributes: "negation"
bool_attributes: ["negation"]
