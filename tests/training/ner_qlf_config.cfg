[nlp]
lang = "fr"
pipeline = [
           "normalizer",
           "sentencizer",
           "embedding",
           "ner",
           "qualifier",
           ]
batch_size = 2
components = ${components}
tokenizer = {"@tokenizers": "eds.tokenizer"}

[components.normalizer]
@factory = "eds.normalizer"

[components.sentencizer]
@factory = "eds.sentences"

[components.embedding]
@factory = "eds.text_cnn"
kernel_sizes = [3]

[components.embedding.embedding]
@factory = "eds.transformer"
model = "hf-internal-testing/tiny-bert"
window = 128
stride = 96

[components.ner]
@factory = "eds.ner_crf"
mode = "joint"
embedding = ${components.embedding}
target_span_getter = ${vars.gold_span_group}
# Set spans as both to ents and in separate `ent.label` groups
span_setter = [ "ents", "*" ]
infer_span_setter = true

[components.qualifier]
@factory = "eds.span_qualifier"
qualifiers = { "_.negation": [ "sosy" ], "_.unit": [ "measure" ] }

[components.qualifier.embedding]
@factory = "eds.span_pooler"
embedding = ${components.embedding}
span_getter = ${[ "ents", vars.gold_span_group]}

[scorer.ner.exact_ner]
@scorers = "eds.ner_exact_scorer"
span_getter = ${vars.gold_span_group}

[scorer.qualifier.qualifier]
@scorers = "eds.span_classification_scorer"
span_getter = ${vars.gold_span_group}
qualifiers = ${components.qualifier.qualifiers}

[vars]
train = "./dataset/"
dev = "./dataset/"
gold_span_group = "gold_spans"

[train]
nlp = ${nlp}
max_steps = 20
validation_interval = ${train.max_steps//10}
warmup_rate = 0
batch_size = 80 words
transformer_lr = 0
task_lr = 1e-3
scorer = ${scorer}

[train.train_data]
randomize = true
max_length = 10
multi_sentence = false
[train.train_data.reader]
@readers = "standoff"
path = ${vars.train}
span_setter = ${vars.gold_span_group}
span_attributes = "negation"
bool_attributes = ["negation"]

[train.val_data]
[train.val_data.reader]
@readers = "standoff"
path = ${vars.dev}
span_setter = ${vars.gold_span_group}
span_attributes = "negation"
bool_attributes = ["negation"]
